buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

version = "1.7.10-0.1"
group= "com.vinterdo.deusexmachina" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "DeusExMachina"

minecraft {
    version = "1.7.10-10.13.4.1448-1.7.10"
    runDir = "eclipse"
}

repositories {
    maven { // The repo from which to get waila
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
    maven { // the repo from which to get NEI and stuff 
        name 'CB Repo'
        url "http://chickenbones.net/maven/"
    }
    ivy {
        name "CoFHCore"
        artifactPattern 'http://addons-origin.cursecdn.com/files/2246/920/[module]-[revision].[ext]'
    }
    ivy {
        name "ThermalExpansion"
        artifactPattern "http://addons-origin.cursecdn.com/files/2233/797/[module]-[revision].[ext]"
    }
    ivy {
        name "ThermalFoundation"
        artifactPattern "http://addons-origin.cursecdn.com/files/2246/923/[module]-[revision].[ext]"
    }
    ivy {
        name "ThermalDynamics"
        artifactPattern "http://addons-origin.cursecdn.com/files/2246/951/[module]-[revision].[ext]"
    }
    ivy {
        name "BuildCraft"
        artifactPattern "http://www.mod-buildcraft.com/releases/BuildCraft/[revision]/[module]-[revision]-[classifier].[ext]"
    }
    maven {
         name "xcompwiz"
         url "http://maven.xcompwiz.com"
    }
    
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
    
    // I dont have to specify NEI.. because gradle magic. aka: transitive dependency resolution
     compile "mcp.mobius.waila:Waila:1.5.10_1.7.10"
     compile "codechicken:NotEnoughItems:1.7.10-1.0.5.110:dev"
     compile "codechicken:CodeChickenCore:1.7.10-1.0.7.46:dev"
     compile "codechicken:CodeChickenLib:1.7.10-1.1.3.138:dev"
     
     compile group: 'cofh', name: 'CoFHCore', version: '[1.7.10]3.0.3-303-dev', ext: 'jar'
     compile group: 'cofh', name: 'ThermalExpansion', version: '[1.7.10]4.0.0-176-dev', ext: 'jar'
     compile group: 'cofh', name: 'ThermalFoundation', version: '[1.7.10]1.2.0-102-dev', ext: 'jar'
     compile group: 'cofh', name: 'ThermalDynamics', version: '[1.7.10]1.1.0-161-dev', ext: 'jar'
     
     compile name: 'buildcraft', version: '7.0.13', classifier: "dev", ext: 'jar'
     compile "com.xcompwiz.lookingglass:lookingglass:0.2.0.00:dev"

}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
    
    api {
    java {
        srcDir 'src/api'
    }
}
}


processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}